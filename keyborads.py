from aiogram import types
from users import User
from random import shuffle


def k_button(text: str):
    return types.KeyboardButton(text=text)


# ////////////////////////////////////////////////////////////////////////////////////////
def start_keyboard():
    kb = [
        [k_button('–ó–∞–¥–∞–Ω–∏—è')],
        [k_button('–¢–µ–æ—Ä–∏—è')], [k_button('–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def additional_information():
    kb = [
        [k_button('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')],
        [k_button('–ü–æ–¥–ø–∏—Å–∫–∞'), k_button('–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏')],
        ['–í–µ—Ä–Ω—É—Ç—å—Å—è üëà']

    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def price_list_of_sub():
    kb = types.InlineKeyboardMarkup(row_width=1)
    kb.add(types.InlineKeyboardButton(text=f'–ü—Ä–æ–±–Ω–∞—è –Ω–∞ 1 –¥–µ–Ω—å',
                                      callback_data=f'subscription_trial'))
    kb.add(types.InlineKeyboardButton(text=f'–ù–∞ –Ω–µ–¥–µ–ª—é 49 —Ä',
                                      callback_data=f'subscription_week') )
    kb.add(types.InlineKeyboardButton(text=f'–ù–∞ –º–µ—Å—è—Ü 99 —Ä',
                                      callback_data=f'subscription_month'))
    kb.add(types.InlineKeyboardButton(text=f'–ù–∞ –ø–æ–ª–≥–æ–¥–∞ 399 —Ä',
                                      callback_data=f'subscription_half_year'))
    kb.add(types.InlineKeyboardButton(text=f'–ù–∞ –≥–æ–¥ 599 —Ä',
                                      callback_data=f'subscription_year'))
    return kb


def check_correct_answer(type_task, num_of_task):
    kb = types.InlineKeyboardMarkup(row_width=1, one_time_keyboard=True)
    kb.add(types.InlineKeyboardButton(text=f'–ü–æ—è—Å–Ω–µ–Ω–∏–µ',
                                      callback_data=f'show_correct_answer {type_task}/{num_of_task}'))
    return kb


def send_to_buy_sub():
    kb = types.InlineKeyboardMarkup(row_width=1, one_time_keyboard=True)
    kb.add(types.InlineKeyboardButton(text=f'–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üí∏',
                                      callback_data=f'buy_sub'))
    return kb


def back_to_start_keyboard():
    kb = [
        ['–í–µ—Ä–Ω—É—Ç—å—Å—è üëà'],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def task_4_keyboard(user: User):
    task_4 = user.get_task_json(type_task=4)
    words_user = [task_4['correct_word'], task_4['incorrect_word']]
    shuffle(words_user)
    kb = [
        [k_button(words_user[0]), k_button(words_user[1])],
        [k_button('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def list_of_student_task(type_kb='kb_solve_1_5'):
    kb_1_5 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(1, 6):
        kb_1_5.add(types.InlineKeyboardButton(text=f'–ó–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'solve_task_{i}'))
    kb_1_5.row(types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_solve_6_11'))

    kb_6_11 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(6, 12):
        kb_6_11.add(types.InlineKeyboardButton(text=f'–ó–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'solve_task_{i}'))
    kb_6_11.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_solve_1_5'),
                types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_solve_16_21'))

    kb_16_21 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(16, 22):
        kb_16_21.add(types.InlineKeyboardButton(text=f'–ó–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'solve_task_{i}'))
    kb_16_21.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_solve_6_11'),
                 types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_solve_22_26'))

    kb_22_26 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(22, 27):
        kb_22_26.add(types.InlineKeyboardButton(text=f'–ó–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'solve_task_{i}'))
    kb_22_26.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_solve_16_21'))

    if type_kb == "kb_solve_1_5":
        return kb_1_5
    elif type_kb == "kb_solve_6_11":
        return kb_6_11
    elif type_kb == "kb_solve_16_21":
        return kb_16_21
    elif type_kb == "kb_solve_22_26":
        return kb_22_26


# ////////////////////////////////////////////////////////////////////////////////////////

def start_admin_keybord():
    kb = [[k_button('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ'), k_button('–ó–∞–±–∞–Ω–∏—Ç—å'), k_button('–û–±—ä—è–≤–ª–µ–Ω–∏—è')],
          [k_button('–í–µ—Ä–Ω—É—Ç—å—Å—è üëà')]]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def task_admin_keyboard(type_kb='kb_edit_1_5'):
    kb_1_5 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(1, 6):
        kb_1_5.add(types.InlineKeyboardButton(text=f'–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'edit_task_{i}'))
    kb_1_5.row(types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_edit_6_11'))

    kb_6_11 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(6, 12):
        kb_6_11.add(types.InlineKeyboardButton(text=f'–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'edit_task_{i}'))
    kb_6_11.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_edit_1_5'),
                types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_edit_16_21'))

    kb_16_21 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(16, 22):
        kb_16_21.add(types.InlineKeyboardButton(text=f'–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'edit_task_{i}'))
    kb_16_21.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_edit_6_11'),
                 types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='kb_edit_22_26'))

    kb_22_26 = types.InlineKeyboardMarkup(row_width=1)
    for i in range(22, 27):
        kb_22_26.add(types.InlineKeyboardButton(text=f'–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ {i}', callback_data=f'edit_task_{i}'))
    kb_22_26.row(types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='kb_edit_16_21'))

    if type_kb == "kb_edit_1_5":
        return kb_1_5
    elif type_kb == "kb_edit_6_11":
        return kb_6_11
    elif type_kb == "kb_edit_16_21":
        return kb_16_21
    elif type_kb == "kb_edit_22_26":
        return kb_22_26


def yes_or_no_edit_file():
    kb = types.InlineKeyboardMarkup(row_width=2, one_time_keyboard=True)
    kb.add(types.InlineKeyboardButton(text=f'–î–∞', callback_data=f'file_allow'),
           types.InlineKeyboardButton(text=f'–ù–µ—Ç', callback_data=f'file_reject'))
    return kb


def back_to_admin_menu():
    kb = [[k_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ üëà')]]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard
